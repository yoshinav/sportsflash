#summary Must and Nice to do list for SportsFlash Project
#labels Phase-Requirements,Phase-Design

==Must do list:==
  *	Access sports data posted to the web, say via Yahoo! Sports or some other online service. 
  *	Create and modify fantasy baseball teams using real world player data.
  *	Create interface to allow users to update player stats over the season, so that the community of users are responsible for maintaining the current player stats.
  *	Provide option of player statistics change alerts or regular stat syndication alerts.
  *	Provide ability to create, manage, and communicate with a group of fellow baseball enthusiasts with accounts on our service. 
  *	Provide alerts to members of the group vis-à-vis rankings and current status.
  *	Provide specialized functionality to the Android Contact-SMS code to allow for sports specific communication between your fantasy league members.
  *	Ability to tag articles and images from the web associated with particular players, store tags to a repository, and then create alerts for other players.

==Nice to do (May not make Aug 7 release):==

  *	Have the player stats update automatically through the season, using a dependable source.
  *	Enhance notification and SMS system to support displaying real-time game scores from dependable source.
  *	Extend data source and interface design to support additional sports like NBA, NHL, NFL, … etc.
  *	Provide a mechanism to allow users to trade players with other members of your fantasy league group.
  *	Create interface to allow for easy league management, like changing rules and point allocation.

------------------------------------------------------------------------------------------

==Must do Accomplishments Check for Aug 7 Version 1:==
  *  *_DID_*:  Access MLB.com for data for our league.
  *  *_DID_*:  Create and modify fantasy baseball teams using real world player data.
  *  *_DID_*:  Create interface to allow users to update player stats over the season, so that the community of users are responsible for maintaining the current player stats.
  *  *_DID_*:  Provide ability to create, manage, and communicate with a group of fellow baseball enthusiasts with accounts on our service (i.e. Message Boards).
  *  *_DID_*:  Create ability for scores/rankings to be updated on the server automatically and displayed on Android phone when requested.
  *  *_DID_*:  Start SMS and alert syndication but *_DID NOT_* fully implement and integrate in version 1.
  *  *_DID NOT_*:  Create ability to tag, and store images and media from the web, but *_DID_* build out personalization classes to eventually support personalizing image galleries with images from the web.

==Nice to do Accomplishments Check for Aug 7 Version 1:==
  * *_DID_*:  Extend architecture to easily support other leagues in the future.
  * *_DID_*:  Implement personalization libraries for image galleries, and push alert message system to be able to display dynamic messages to the user, all mulitasking supported with threading.  This will allow for real time scores or other alerts to be displayed.
  * *_DID NOT_*:  Create easy interface to change league management or scoring rules.
  * *_DID NOT_*:  Fully implement trading player functionality.
  * *_DID NOT_*:  Extend SMS to support real time scores.
  * *_DID NOT_*:  Have player stats automatically updated from dependable source (Version 1 dependent on user community for updates and moderation).